#0Y_ #0Y |CHARSET|::|UTF-8|
(|SYSTEM|::|%IN-PACKAGE| "WIZ-UTIL" :|NICKNAMES| '("WIZ") :|USE|
 '|COMMON-LISP|::|NIL| :|CASE-SENSITIVE| |COMMON-LISP|::|NIL| :|CASE-INVERTED|
 |COMMON-LISP|::|NIL|)
(|COMMON-LISP|::|USE-PACKAGE| '("COMMON-LISP") "WIZ-UTIL")
(|SYSTEM|::|INTERN-EXPORT|
 '("MAC" "NLET" "MLET" "WHILE" "SFOR" "N-TIMES" "SACCUMULATE" "SSUM" "SAVERAGE"
   "SPROD" "SUMMATION" "PRODUCT" "LAST1" "SINGLE?" "MKLIST" "APPEND1" "NCONC1"
   "EXISTP" "SPLIT" "EXCLUSIVE-OR" "POW" "TAK" "DEBUG-PRINT" "MAKE-NUMBER-LIST"
   "MIN-POSITION" "MAX-POSITION" "GENERAL-MAX/MIN" "FILTER" "GROUPING"
   "REMOVE-NTH" "POSITION-IF-LIST" "FORMAT-LIST" "DIRECT-PRODUCT"
   "N-TIMES-COLLECT" "SQUARE" "SGN" "INDEX-LIST->SCALAR-INDEX"
   "SCALAR-INDEX->INDEX-LIST" "RANDOM-FROM-PROBABILITY-LIST" "D"
   "WITH-OPEN-MULTIPLE-FILE" "FLATTEN" "NTHCAR" "ASSOC-REF")
 "WIZ-UTIL" |COMMON-LISP|::|NIL|)
(|COMMON-LISP|::|FIND-PACKAGE| "WIZ-UTIL")
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "WIZ-UTIL"))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|WIZ-UTIL|::|MAC|)
(|SYSTEM|::|%PUTD| '|WIZ-UTIL|::|MAC|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |WIZ-UTIL|::|MAC|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|WIZ-UTIL|::|EXPRESSION|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |WIZ-UTIL|::|MAC|
       `(|COMMON-LISP|::|PPRINT|
         (|COMMON-LISP|::|MACROEXPAND-1| ',|WIZ-UTIL|::|EXPRESSION|)))))))
  '(|WIZ-UTIL|::|EXPRESSION|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|WIZ-UTIL|::|NLET|)
(|SYSTEM|::|%PUTD| '|WIZ-UTIL|::|NLET|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |WIZ-UTIL|::|NLET|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|WIZ-UTIL|::|TAG|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|WIZ-UTIL|::|VAR-VALS| (|COMMON-LISP|::|CADDR| . #1#))
       (|WIZ-UTIL|::|BODY| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |WIZ-UTIL|::|NLET|
       `(|COMMON-LISP|::|LABELS|
         ((,|WIZ-UTIL|::|TAG|
           ,(|COMMON-LISP|::|MAPCAR| #'|COMMON-LISP|::|CAR|
             |WIZ-UTIL|::|VAR-VALS|)
           ,@|WIZ-UTIL|::|BODY|))
         (|COMMON-LISP|::|DECLARE|
          (|COMMON-LISP|::|OPTIMIZE| (|COMMON-LISP|::|SPEED| 3.)))
         (,|WIZ-UTIL|::|TAG|
          ,@(|COMMON-LISP|::|MAPCAR| #'|COMMON-LISP|::|CADR|
             |WIZ-UTIL|::|VAR-VALS|))))))))
  '(|WIZ-UTIL|::|TAG| |WIZ-UTIL|::|VAR-VALS| |COMMON-LISP|::|&BODY|
    |WIZ-UTIL|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|WIZ-UTIL|::|MLET|)
(|SYSTEM|::|%PUTD| '|WIZ-UTIL|::|MLET|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |WIZ-UTIL|::|MLET|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|WIZ-UTIL|::|SYMBOLS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|WIZ-UTIL|::|VALUE-LIST| (|COMMON-LISP|::|CADDR| . #1#))
       (|WIZ-UTIL|::|BODY| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |WIZ-UTIL|::|MLET|
       `(|COMMON-LISP|::|APPLY|
         (|COMMON-LISP|::|LAMBDA| ,|WIZ-UTIL|::|SYMBOLS| ,@|WIZ-UTIL|::|BODY|)
         ,|WIZ-UTIL|::|VALUE-LIST|))))))
  '(|WIZ-UTIL|::|SYMBOLS| |WIZ-UTIL|::|VALUE-LIST| |COMMON-LISP|::|&BODY|
    |WIZ-UTIL|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|WIZ-UTIL|::|WHILE|)
(|SYSTEM|::|%PUTD| '|WIZ-UTIL|::|WHILE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |WIZ-UTIL|::|WHILE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|WIZ-UTIL|::|TEST|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|WIZ-UTIL|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |WIZ-UTIL|::|WHILE|
       `(|COMMON-LISP|::|DO| |COMMON-LISP|::|NIL|
         ((|COMMON-LISP|::|NOT| ,|WIZ-UTIL|::|TEST|))
         ,@|WIZ-UTIL|::|BODY|))))))
  '(|WIZ-UTIL|::|TEST| |COMMON-LISP|::|&REST| |WIZ-UTIL|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|WIZ-UTIL|::|SFOR|)
(|SYSTEM|::|%PUTD| '|WIZ-UTIL|::|SFOR|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |WIZ-UTIL|::|SFOR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G138130| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G138131|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| #1# 3. 3. |COMMON-LISP|::|NIL|))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|WIZ-UTIL|::|SFOR| #1#
          '#4=(|WIZ-UTIL|::|INDEX-VAR| |WIZ-UTIL|::|START-POSITION|
               |WIZ-UTIL|::|STOP-POSITION|))
         #1#))
       (|WIZ-UTIL|::|INDEX-VAR| (|COMMON-LISP|::|CAR| #3#))
       (|WIZ-UTIL|::|START-POSITION| (|COMMON-LISP|::|CADR| . #5=(#3#)))
       (|WIZ-UTIL|::|STOP-POSITION| (|COMMON-LISP|::|CADDR| . #5#))
       (|WIZ-UTIL|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |WIZ-UTIL|::|SFOR|
       `(|COMMON-LISP|::|LET|
         ((,|WIZ-UTIL|::|INDEX-VAR| ,|WIZ-UTIL|::|START-POSITION|))
         (|COMMON-LISP|::|LABELS|
          ((|WIZ-UTIL|::|REC| |COMMON-LISP|::|NIL|
            (|COMMON-LISP|::|IF|
             (|COMMON-LISP|::|=| ,|WIZ-UTIL|::|INDEX-VAR|
              ,|WIZ-UTIL|::|STOP-POSITION|)
             (|COMMON-LISP|::|PROGN| ,@|WIZ-UTIL|::|BODY|)
             (|COMMON-LISP|::|PROGN| ,@|WIZ-UTIL|::|BODY|
              (|COMMON-LISP|::|SETF| ,|WIZ-UTIL|::|INDEX-VAR|
               (|COMMON-LISP|::|1+| ,|WIZ-UTIL|::|INDEX-VAR|))
              (|WIZ-UTIL|::|REC|)))))
          (|WIZ-UTIL|::|REC|))))))))
  '(#4# |COMMON-LISP|::|&BODY| |WIZ-UTIL|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|WIZ-UTIL|::|N-TIMES|)
(|SYSTEM|::|%PUTD| '|WIZ-UTIL|::|N-TIMES|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |WIZ-UTIL|::|N-TIMES|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|WIZ-UTIL|::|M|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|WIZ-UTIL|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |WIZ-UTIL|::|N-TIMES|
       `(|COMMON-LISP|::|LABELS|
         ((|WIZ-UTIL|::|REC| (|WIZ-UTIL|::|N| |WIZ-UTIL|::|CNT|)
           (|COMMON-LISP|::|COND|
            ((|COMMON-LISP|::|=| |WIZ-UTIL|::|N| 0.) |COMMON-LISP|::|NIL|)
            ((|COMMON-LISP|::|=| |WIZ-UTIL|::|CNT| |WIZ-UTIL|::|N|)
             (|COMMON-LISP|::|PROGN| ,@|WIZ-UTIL|::|BODY|))
            (|COMMON-LISP|::|T|
             (|COMMON-LISP|::|PROGN| ,@|WIZ-UTIL|::|BODY|
              (|WIZ-UTIL|::|REC| |WIZ-UTIL|::|N|
               (|COMMON-LISP|::|1+| |WIZ-UTIL|::|CNT|)))))))
         (|WIZ-UTIL|::|REC| ,|WIZ-UTIL|::|M| 1.)))))))
  '(|WIZ-UTIL|::|M| |COMMON-LISP|::|&BODY| |WIZ-UTIL|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|SACCUMULATE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|WIZ-UTIL|::|OP| |WIZ-UTIL|::|INITIAL| |COMMON-LISP|::|SEQUENCE|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|SSUM|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|WIZ-UTIL|::|LST|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|SAVERAGE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|WIZ-UTIL|::|LST|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|SPROD|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|WIZ-UTIL|::|LST|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|WIZ-UTIL|::|SUMMATION|)
(|SYSTEM|::|%PUTD| '|WIZ-UTIL|::|SUMMATION|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |WIZ-UTIL|::|SUMMATION|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G138184| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G138185|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| #1# 3. 3. |COMMON-LISP|::|NIL|))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|WIZ-UTIL|::|SUMMATION| #1#
          '#4=(|WIZ-UTIL|::|INDEX| |WIZ-UTIL|::|START| |WIZ-UTIL|::|END|))
         #1#))
       (|WIZ-UTIL|::|INDEX| (|COMMON-LISP|::|CAR| #3#))
       (|WIZ-UTIL|::|START| (|COMMON-LISP|::|CADR| . #5=(#3#)))
       (|WIZ-UTIL|::|END| (|COMMON-LISP|::|CADDR| . #5#))
       (|WIZ-UTIL|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |WIZ-UTIL|::|SUMMATION|
       `(|WIZ-UTIL|::|NLET| |WIZ-UTIL|::|ITER|
         ((|WIZ-UTIL|::|PRODUCT| 0.)
          (,|WIZ-UTIL|::|INDEX| ,|WIZ-UTIL|::|START|))
         (|COMMON-LISP|::|IF|
          (|COMMON-LISP|::|>| ,|WIZ-UTIL|::|INDEX| ,|WIZ-UTIL|::|END|)
          |WIZ-UTIL|::|PRODUCT|
          (|WIZ-UTIL|::|ITER|
           (|COMMON-LISP|::|+| (|COMMON-LISP|::|PROGN| ,@|WIZ-UTIL|::|BODY|)
            |WIZ-UTIL|::|PRODUCT|)
           (|COMMON-LISP|::|1+| ,|WIZ-UTIL|::|INDEX|)))))))))
  '(#4# |COMMON-LISP|::|&BODY| |WIZ-UTIL|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|WIZ-UTIL|::|PRODUCT|)
(|SYSTEM|::|%PUTD| '|WIZ-UTIL|::|PRODUCT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |WIZ-UTIL|::|PRODUCT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G138198| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G138199|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| #1# 3. 3. |COMMON-LISP|::|NIL|))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|WIZ-UTIL|::|PRODUCT| #1#
          '#4=(|WIZ-UTIL|::|INDEX| |WIZ-UTIL|::|START| |WIZ-UTIL|::|END|))
         #1#))
       (|WIZ-UTIL|::|INDEX| (|COMMON-LISP|::|CAR| #3#))
       (|WIZ-UTIL|::|START| (|COMMON-LISP|::|CADR| . #5=(#3#)))
       (|WIZ-UTIL|::|END| (|COMMON-LISP|::|CADDR| . #5#))
       (|WIZ-UTIL|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |WIZ-UTIL|::|PRODUCT|
       `(|WIZ-UTIL|::|NLET| |WIZ-UTIL|::|ITER|
         ((|WIZ-UTIL|::|PRODUCT| 1.)
          (,|WIZ-UTIL|::|INDEX| ,|WIZ-UTIL|::|START|))
         (|COMMON-LISP|::|IF|
          (|COMMON-LISP|::|>| ,|WIZ-UTIL|::|INDEX| ,|WIZ-UTIL|::|END|)
          |WIZ-UTIL|::|PRODUCT|
          (|WIZ-UTIL|::|ITER|
           (|COMMON-LISP|::|*| (|COMMON-LISP|::|PROGN| ,@|WIZ-UTIL|::|BODY|)
            |WIZ-UTIL|::|PRODUCT|)
           (|COMMON-LISP|::|1+| ,|WIZ-UTIL|::|INDEX|)))))))))
  '(#4# |COMMON-LISP|::|&BODY| |WIZ-UTIL|::|BODY|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |WIZ-UTIL|::|LAST1| |WIZ-UTIL|::|SINGLE|
   |WIZ-UTIL|::|APPEND1| |WIZ-UTIL|::|CONC1| |WIZ-UTIL|::|MKLIST|))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|LAST1|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|WIZ-UTIL|::|LST|))
 '(#1# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |WIZ-UTIL|::|LAST1|))
   (|COMMON-LISP|::|BLOCK| |WIZ-UTIL|::|LAST1|
    (|COMMON-LISP|::|CAR| (|COMMON-LISP|::|LAST| |WIZ-UTIL|::|LST|)))))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|SINGLE?|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|WIZ-UTIL|::|LST|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|MKLIST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|WIZ-UTIL|::|OBJ|))
 '(#1# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |WIZ-UTIL|::|MKLIST|))
   (|COMMON-LISP|::|BLOCK| |WIZ-UTIL|::|MKLIST|
    (|COMMON-LISP|::|IF| (|COMMON-LISP|::|LISTP| |WIZ-UTIL|::|OBJ|)
     |WIZ-UTIL|::|OBJ| (|COMMON-LISP|::|LIST| |WIZ-UTIL|::|OBJ|)))))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|APPEND1|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#1=(|WIZ-UTIL|::|LST| |WIZ-UTIL|::|OBJ|))
 '(#1# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |WIZ-UTIL|::|APPEND1|))
   (|COMMON-LISP|::|BLOCK| |WIZ-UTIL|::|APPEND1|
    (|COMMON-LISP|::|APPEND| |WIZ-UTIL|::|LST|
     (|COMMON-LISP|::|LIST| |WIZ-UTIL|::|OBJ|)))))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|NCONC1|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|WIZ-UTIL|::|LST| |WIZ-UTIL|::|OBJ|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|EXISTP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|WIZ-UTIL|::|PRED| |WIZ-UTIL|::|LST|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|SPLIT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|WIZ-UTIL|::|LST| |WIZ-UTIL|::|N|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|WIZ-UTIL|::|EXCLUSIVE-OR|)
(|SYSTEM|::|%PUTD| '|WIZ-UTIL|::|EXCLUSIVE-OR|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |WIZ-UTIL|::|EXCLUSIVE-OR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|WIZ-UTIL|::|A|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|WIZ-UTIL|::|B| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |WIZ-UTIL|::|EXCLUSIVE-OR|
       `(|COMMON-LISP|::|AND|
         (|COMMON-LISP|::|OR| ,|WIZ-UTIL|::|A| ,|WIZ-UTIL|::|B|)
         (|COMMON-LISP|::|NOT|
          (|COMMON-LISP|::|AND| ,|WIZ-UTIL|::|A| ,|WIZ-UTIL|::|B|))))))))
  '(|WIZ-UTIL|::|A| |WIZ-UTIL|::|B|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|POW|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|WIZ-UTIL|::|N| |WIZ-UTIL|::|A|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|TAK|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|WIZ-UTIL|::|X| |WIZ-UTIL|::|Y| |WIZ-UTIL|::|Z|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|DEBUG-PRINT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|WIZ-UTIL|::|PRE-EXP| |COMMON-LISP|::|EXP|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|MAKE-NUMBER-LIST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|WIZ-UTIL|::|START| |WIZ-UTIL|::|END|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|MIN-POSITION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|WIZ-UTIL|::|LST|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|MAX-POSITION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|WIZ-UTIL|::|LST|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|GENERAL-MAX/MIN|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|WIZ-UTIL|::|PREDICATE| |WIZ-UTIL|::|LST|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|FILTER|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|WIZ-UTIL|::|PROC| |WIZ-UTIL|::|LST|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|GROUPING|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|WIZ-UTIL|::|PREDICATE-LIST| |WIZ-UTIL|::|TARGET-LIST|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|REMOVE-NTH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|WIZ-UTIL|::|N| |WIZ-UTIL|::|LST|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|POSITION-IF-LIST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|WIZ-UTIL|::|PRIDICATE| |COMMON-LISP|::|SEQUENCE|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|FORMAT-LIST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|WIZ-UTIL|::|LST| |COMMON-LISP|::|&KEY|
    (|COMMON-LISP|::|STREAM| |COMMON-LISP|::|T|))))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|DIRECT-PRODUCT-2ARG|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|WIZ-UTIL|::|LST1| |WIZ-UTIL|::|LST2|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|DIRECT-PRODUCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&REST| |WIZ-UTIL|::|LSTS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|WIZ-UTIL|::|N-TIMES-COLLECT|)
(|SYSTEM|::|%PUTD| '|WIZ-UTIL|::|N-TIMES-COLLECT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |WIZ-UTIL|::|N-TIMES-COLLECT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|WIZ-UTIL|::|N|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|WIZ-UTIL|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |WIZ-UTIL|::|N-TIMES-COLLECT|
       `(|COMMON-LISP|::|LABELS|
         ((|WIZ-UTIL|::|REC|
           (|WIZ-UTIL|::|M| |WIZ-UTIL|::|CNT| |WIZ-UTIL|::|PRODUCT|)
           (|COMMON-LISP|::|COND|
            ((|COMMON-LISP|::|=| |WIZ-UTIL|::|M| 0.) |COMMON-LISP|::|NIL|)
            ((|COMMON-LISP|::|=| |WIZ-UTIL|::|CNT| |WIZ-UTIL|::|M|)
             (|COMMON-LISP|::|CONS|
              (|COMMON-LISP|::|PROGN| ,@|WIZ-UTIL|::|BODY|)
              |WIZ-UTIL|::|PRODUCT|))
            (|COMMON-LISP|::|T|
             (|WIZ-UTIL|::|REC| |WIZ-UTIL|::|M|
              (|COMMON-LISP|::|1+| |WIZ-UTIL|::|CNT|)
              (|COMMON-LISP|::|CONS|
               (|COMMON-LISP|::|PROGN| ,@|WIZ-UTIL|::|BODY|)
               |WIZ-UTIL|::|PRODUCT|))))))
         (|WIZ-UTIL|::|REC| ,|WIZ-UTIL|::|N| 1. |COMMON-LISP|::|NIL|)))))))
  '(|WIZ-UTIL|::|N| |COMMON-LISP|::|&BODY| |WIZ-UTIL|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|SQUARE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|WIZ-UTIL|::|X|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|SGN|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|WIZ-UTIL|::|X|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|INDEX-LIST->SCALAR-INDEX|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|WIZ-UTIL|::|DIMENSION-LIST| |WIZ-UTIL|::|INDEX-LIST|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|SCALAR-INDEX->INDEX-LIST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|WIZ-UTIL|::|DIMENSION-LIST| |WIZ-UTIL|::|SCALAR-INDEX|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|RANDOM-FROM-PROBABILITY-LIST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|WIZ-UTIL|::|PROBABILITY-LIST|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|D|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|WIZ-UTIL|::|OBJECT|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|WIZ-UTIL|::|WITH-OPEN-MULTIPLE-FILE|)
(|SYSTEM|::|%PUTD| '|WIZ-UTIL|::|WITH-OPEN-MULTIPLE-FILE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |WIZ-UTIL|::|WITH-OPEN-MULTIPLE-FILE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|WIZ-UTIL|::|STREAM-SPECS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|WIZ-UTIL|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |WIZ-UTIL|::|WITH-OPEN-MULTIPLE-FILE|
       (|WIZ-UTIL|::|NLET| |WIZ-UTIL|::|ITR|
        ((|WIZ-UTIL|::|STREAM-SPECS| |WIZ-UTIL|::|STREAM-SPECS|)
         (|WIZ-UTIL|::|PRODUCT| '|COMMON-LISP|::|NIL|)
         (|WIZ-UTIL|::|BODY| |WIZ-UTIL|::|BODY|))
        (|COMMON-LISP|::|IF| (|COMMON-LISP|::|NULL| |WIZ-UTIL|::|STREAM-SPECS|)
         |WIZ-UTIL|::|PRODUCT|
         (|WIZ-UTIL|::|ITR| (|COMMON-LISP|::|CDR| |WIZ-UTIL|::|STREAM-SPECS|)
          `(|COMMON-LISP|::|WITH-OPEN-FILE|
            (,@(|COMMON-LISP|::|CAR| |WIZ-UTIL|::|STREAM-SPECS|))
            ,(|COMMON-LISP|::|IF| |WIZ-UTIL|::|BODY|
              (|COMMON-LISP|::|CONS| '|COMMON-LISP|::|PROGN|
               |WIZ-UTIL|::|BODY|)
              |WIZ-UTIL|::|PRODUCT|))
          |COMMON-LISP|::|NIL|))))))))
  '(|WIZ-UTIL|::|STREAM-SPECS| |COMMON-LISP|::|&BODY| |WIZ-UTIL|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|FLATTEN|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|WIZ-UTIL|::|X|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|NTHCAR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|WIZ-UTIL|::|N| |COMMON-LISP|::|LIST|)))
(|SYSTEM|::|C-DEFUN| '|WIZ-UTIL|::|ASSOC-REF|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|WIZ-UTIL|::|ITEM| |WIZ-UTIL|::|ALIST|)))
